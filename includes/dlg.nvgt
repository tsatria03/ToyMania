void dlg(string message, bool dlgcoppy=true, int timeout=-1)
{
timer timeouter;
speak(message);
while(true)
{
wait(5);
if (timeout>-1 and timeouter.elapsed>=timeout)
return;
if (key_repeating(KEY_C) and dlgcoppy==true)
{
temp.destroy_all();
temp.play_stationary("dlgcoppy.ogg", false);
speak("Copied");
clipboard_copy_text(message);
}
if (key_repeating(KEY_LEFT) or key_repeating(KEY_RIGHT) or key_repeating(KEY_UP) or key_repeating(KEY_DOWN))
{
speak(message);
}
if(key_repeating(KEY_RETURN) or key_down(KEY_A))
{
temp.destroy_all();
break;
}
}
}
void dlgmessage(string messages)
{
temp.play_stationary("dlgopen.ogg", false);
string[] d=string_split(messages,"--",true);
dlg(d[0]);
if (d.length()>1)
{
for (uint i=1; i<d.length(); i++)
{
temp.play_stationary("dlgscroll.ogg", false);
dlg(d[i]);
}
}
temp.play_stationary("dlgclose.ogg", false);
}
void dlgmessage_enter(string msg)
{
    dlgmessage(msg + (speak_dlg_enter ? " Press enter to continue." : ""));
}
void dlgplay(string dlgsound, bool skippable=true, bool fadeable=true, int fadetime=30)
{
sound dlgaudio;
dlgaudio.load(dlgsound);
dlgaudio.play();
while(dlgaudio.playing)
{
wait(5);
if(key_repeating(KEY_RETURN) and skippable==true or key_down(KEY_A) and skippable==true)
{
if (fadeable==true)
{
while (dlgaudio.volume>=-40)
{
dlgaudio.volume=dlgaudio.volume-2;
wait(fadetime);
}
}
dlgaudio.stop();
break;
}
}
}
