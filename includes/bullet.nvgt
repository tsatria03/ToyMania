bullet@[]bullets(0);
class bullet
{
int bullx;
int bully;
int range;
int range2;
int damage;
int speed;
string direction;
timer speedtimer;
bullet(int bx,int by,int br,int br2,int dmg,int sp,string dr)
{
bullx=bx;
bully=by;
range=br;
range2=br2;
damage=dmg;
speed=sp;
direction=dr;
}
}
void bulletloop()
{
for(uint i=0; i<bullets.length(); i++)
{
if(bullets[i].speedtimer.elapsed>=bullets[i].speed)
{
bullets[i].speedtimer.restart();
if(bullets[i].direction=="right")
{
bullets[i].bullx++;
}
if(bullets[i].direction=="left")
{
bullets[i].bullx--;
}
if(bullets[i].direction=="up")
{
bullets[i].bully++;
}
if(bullets[i].direction=="down")
{
bullets[i].bully--;
}
if (absolute(me.x - bullets[i].bullx) <= 2 && absolute(me.y - bullets[i].bully) <= 2 and doormove == false)
{
painslot=p.play_stationary("playerpain.ogg", false);
health-=bullets[i].damage;
bullets.remove_at(i);
return;
}
if (abs(bullets[i].bullx - me.x) > bullets[i].range || abs(bullets[i].bully - me.y) > bullets[i].range2)
{
bullets.remove_at(i);
return;
}
}
for(uint i1=0; i1<objs.length(); i1++)
{
if (absolute(objs[i1].itx - bullets[i].bullx) <= 2 && absolute(objs[i1].ity - bullets[i].bully) <= 2)
{
objpool.destroy_sound(objs[i1].objsound);
objs[i1].hurtsound=objpool.play_2d("itembreak"+random(1,6)+".ogg", me.x, me.y, objs[i1].itx, objs[i1].ity, false);
objs.remove_at(i1);
bullets.remove_at(i);
return;
}
}
for(uint i2=0; i2<keys.length(); i2++)
{
if (absolute(keys[i2].kx - bullets[i].bullx) <= 2 && absolute(keys[i2].ky - bullets[i].bully) <= 2)
{
keypool.destroy_sound(keys[i2].keysound);
keys[i2].hurtsound=keypool.play_2d("keybreak"+random(1,6)+".ogg", me.x, me.y, keys[i2].kx, keys[i2].ky, false);
keys.remove_at(i2);
bullets.remove_at(i);
return;
}
}
for(uint i3=0; i3<toys.length(); i3++)
{
if (absolute(toys[i3].tx - bullets[i].bullx) <= 2 && absolute(toys[i3].ty - bullets[i].bully) <= 2)
{
toypool.destroy_sound(toys[i3].toysound);
toys[i3].hurtsound=toypool.play_2d("toybreak"+random(1,3)+".ogg", me.x, me.y, toys[i3].tx, toys[i3].ty, false);
toys.remove_at(i3);
bullets.remove_at(i);
return;
}
}
}
}
void spawn_bullet(int x,int y,int range,int range2,int damage,int speed,string direction)
{
bullet bl1(x,y,range,range2,damage,speed,direction);
bullets.insert_last(bl1);
}
void destroy_all_bullets()
{
bullets.resize(0);
}
