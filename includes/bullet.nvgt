bullet@[]bullets(0);
class bullet
{
int bullx;
int bully;
int range;
int range2;
int damage;
int speed;
string direction;
timer speedtimer;
bullet(int bx,int by,int br,int br2,int dmg,int sp,string dr)
{
bullx=bx;
bully=by;
range=br;
range2=br2;
damage=dmg;
speed=sp;
direction=dr;
}
}
void bulletloop()
{
for(uint i=0; i<bullets.length(); i++)
{
if(bullets[i].speedtimer.elapsed>=bullets[i].speed)
{
bullets[i].speedtimer.restart();
if(bullets[i].direction=="right")
{
bullets[i].bullx++;
}
if(bullets[i].direction=="left")
{
bullets[i].bullx--;
}
if(bullets[i].direction=="up")
{
bullets[i].bully++;
}
if(bullets[i].direction=="down")
{
bullets[i].bully--;
}
if (absolute(me.x - bullets[i].bullx) <= 1 && absolute(me.y - bullets[i].bully) <= 1)
{
painslot=p.play_stationary("playerpain.ogg", false);
health-=bullets[i].damage;
bullets.remove_at(i);
return;
}
if(absolute(bullets[i].bullx-me.x)>bullets[i].range or absolute(bullets[i].bully-me.y)>bullets[i].range2)
{
bullets.remove_at(i);
return;
}
}
}
}
void spawn_bullet(int x,int y,int range,int range2,int damage,int speed,string direction)
{
bullet bl1(x,y,range,range2,damage,speed,direction);
bullets.insert_last(bl1);
}
void destroy_all_bullets()
{
bullets.resize(0);
}
