int invpos;
dictionary inv;
void give(string item, int amount)
{
int a;
if (!inv.exists(item))
{
inv.set(item,amount);
}
else
{
inv.get(item,a);
if (a+amount<=0)
inv.delete(item);
else
inv.set(item,a+amount);
}
}
void clear_inv()
{
inv.delete_all();
}
void cycle_inv(int dir)
{
if (dir==1)
invpos+=1;
if(inv.get_size()!=0) invslot=p.play_stationary(find_sound("sounds/"+soundpack+"/misc/player/*inv*"),false);
else
invpos-=1;
if (invpos>=inv.get_size())
{
invpos=0;
}
else if (invpos<0)
{
invpos=inv.get_size()-1;
}
if (inv.get_size()==0)
{
p.destroy_sound(invslot);
speak("empty");
}
else
{
int a;
inv.get(inv.get_keys()[invpos],a);
if(a==1)
speak(inv.get_keys()[invpos]+". Item "+(invpos+1)+" of "+inv.get_keys().length());
else
speak(inv.get_keys()[invpos]+"s, "+a+". Item "+(invpos+1)+" of "+inv.get_keys().length());
}
}
void useitem(string current)
{
if (inv.get_size()<=0)
{
speak("No items");
}
else
{
current=inv.get_keys()[invpos];
string[] toycats = {"common", "other"};
for (uint i = 0; i < toycats.length(); i++)
{
string toycat = toycats[i];
string[] toytypes = find_directories("sounds/" + soundpack + "/equipments/items/normal/toys/" + toycat + "/*");
for (uint j = 0; j < toytypes.length(); j++)
{
string toyname = toytypes[j];
if (current == toyname)
{
string path = "sounds/" + soundpack + "/equipments/items/normal/toys/" + toycat + "/" + toyname + "/info.tmf";
if (file_exists(path))
{
toyfile.open(path, "rb");
toydesc = toyfile.read();
toyfile.close();
speak(toydesc);
return;
}
else
{
speak("No description available for " + toyname + ".");
return;
}
}
}
}
}
}
int count_total_items()
{
int amount=0;
for (uint i=0; i<inv.get_keys().length(); i++)
{
int a;
inv.get(inv.get_keys()[i],a);
amount+=a;
}
return amount;
}
string getitem()
{
if (inv.get_size()<=0)
{
return "";
}
else
{
string current=inv.get_keys()[invpos];
return current;
}
}
int item_exists(string item)
{
string[] current=inv.get_keys();
int index=current.find(item);
if (index>-1)
{
int ab;
inv.get(current[index],ab);
return ab;
}
else
return -1;
}
