#pragma document docks
#pragma plugin nvgt_curl
#pragma embed "data/assets.tmg"
#include"includes/includes.nvgt"
bool behind_pitch=true;
bool hrtf=true;
bool y_is_elevation=true;
bool bossdefeated = false;
bool bossespawn=false, cardest=false, carspawn=false, gardspawn=false, keydest=false, keyspawn=false, objdest=false, objspawn=false, toydest=false, toyspawn=false;
bool endless = false;
bool heartbeat_playing = false;
bool paused=false;
bool play_ach_scores=true;
bool speak_ach_scores=true;
bool speak_dlg_enter=true;
bool speak_menu_loading=true;
bool gamcopy=true;
bool statscopy=true;
bool loop_previews=true;
bool variant_descriptions=true;
bool copexpsounds=true;
bool quit_menu=true;
bool playcounts=true;
bool playlevels=true;
bool alarm_started = false;
bool countdown_started = false;
bool small_storedest=false;
bool medium_storedest=false;
bool completesound=true;
bool togglesound=true;
bool showset_desc=true;
bool isReloading = false;
bool auto_check_updates = true;
bool autorun=false;
double alarmvolume=0, alarmpitch=100, heartvolume=0, heartpitch=100, toyambvolume=0, toyambpitch=100, toymusvolume=0, toymuspitch=100;
double ammo=50, maxammo=50, reserved_ammo=250, max_reserved_ammo=250;
double collected_keys=0, collected_toys=0, destroyed_cars=0, health=1000, maxhealth=1000, storehealth=1000, storemaxhealth=1000, killed_gards=0, level=1, money=0, moved_steps=0, bitplays=0, crashplays=0, swordplays=0, stoneplays=0, total_collected_toys=0, total_collected_keys=0, total_killed_gards=0, total_destroyed_cars=0, total_moved_steps=0;
double maxx=50, maxy=50;
float master_volume = 0;
int achslot, invslot, itemslot, painslot, toyambslot, toytrackslot, weaponslot, alarmslot, heartslot, countslot;
int gametime, movetime;
int bossnum=1, carnum=5, gardnum=10, keynum=15, objnum=15, toynum=20;
int bossespawntime=5000, objspawntime=2500, carspawntime=1000, gardspawntime=500, keyspawntime=250, toyspawntime=125;
int boss_time_limit = 90000;
int last_level_time = 0;
int weprange=5, weprange2=10, wepdamage=20;
int firetime=50, firetime2=100;
int runtime=100;
int usetime=100;
int walktime=200;
int lastMusicIndex = -1;
int save_interval = 5000;
int reloadDuration = 2500;
int64 session_playtime = 0;
int64 total_playtime = 0;
string last_learn_category = "";
string savePath = DIRECTORY_APPDATA + "tsatria03/ToyMania/saves/";
string statsPath = DIRECTORY_APPDATA + "tsatria03/ToyMania/stats/";
string last_played_date;
string last_played_time;
string ambtype="gameamb";
string mustype="gamemus";
string current_weapon;
string weapontype="bat";
string soundcard="Default";
string version;
timer reloadTimer;
timer savedata_timer;
timer boss_timer, bossespawntimer, carspawntimer, firetimer, firetimer2, gametimer, gardspawntimer, objspawntimer, keyspawntimer, movetimer, runtimer, toyspawntimer, usetimer, walktimer;
file achfile, dockfile, dockver, gamfile, poastfile, statfile;
instance gamstence("tm");
audio_form form;
sound dummy;
sound@ progress_sound;
menu m;
savedata sd(DIRECTORY_APPDATA+"tsatria03/ToyMania/saves/game.tmg", "PYtaj2OBK9oT0MVpgeyo32zlfd3MuggW4g7Ago5t0PHI3pafU6QbwYo5wy3G1KWYWGiS8A9dNpI8M85j1D95Gjo4By96owIC3SfJMa5xCtl0yrrlDCWQjlZJgYnLWFGWRFeFzvHMZZL9exA7DBUPrdtF72wyZGQWNele7UOTCXeTtfsciim2bw3F31VsOhF3tCTp5Tt3hE5SpQmMTSmh8tOWZ7zDVXRIWAqjxnOBtD5qKI1l5b80ZxlcUL8aITZuz0YTcmWGrP5IItxzJj2YX3M9Y4v34Sx1C9PaBcmgdpn6ts56mbRjc69gmdry56hlaKrPKmnp2U");
savedata st(DIRECTORY_APPDATA+"tsatria03/ToyMania/saves/settings.tmg", "JPl3mWxEI9k3USkJ9FOcAyX3rM2bC7TEMal2yhACrMXiymP9blH8RUhAnXJgY9s8wN18ZQDYnMAyqespGd7oqHOYEuhY10Py2KWa0GU7PmLuQTs86u9GSrNALSI2cQr91Nx7JdchD0YR3VT9Wt8HOeh7iEZmHKnAspZSZStdGL8WJdxuZSetCSEsSdyvpKtYa2kC4dE7PKM9YsdgQrOSxAOmnRtitYRdXr3NHdUhf8qefxjMMsELF3lzVycamyLAbTxpM1Kkj4h5YnELQxNf81ULUGyKVA2j3gx2wlJvbABIufN52A08Ia8ufou63Z4ZvUuzhj81jvzwS4D8XJ7e4k3hgdjI9oChGt991DqWjc2i3O7DQGgPQDSsrkXXKxz79ZlLyjF9nqlj0RuTIV0qNxZLgPEMqIKeGhxphLsJP3scIvtSzkKELNMvbwrDDFeT8pXVP");
AchievementTracker[] achievements;
sound_pool spool, temp, p, alarmpool, ambpool, bulletpool, heartpool, healpool, objpool, muspool, pool, bosspool, carpool, doorpool, gardpool, keypool, toypool;
time_elapsed timeelapsed;
timestamp last_update_check_timestamp;
virtual_dialogs vd;
vector me;
void main()
{
    last_played_date = get_date(true, false);
    last_played_time = get_time(true, false);
set_sound_storage("*");
set_sound_decryption_key("LGY24P2p56riZXtvhxtONfyBQgVZZS8wJnVSJEZ0zOOeQr3THFTtlyIXYI04Dgbk2SD1DoCMFk8QuRPv7DhlAXJDb3XzEt8vd9RcU8LW0LzcXkHvJUmkWbAtJ8ITyuCF0CkpPcW6eiPsjGDU9rlVufn8GSO2vy4KAjcLe",true);
dummy.load("dummy");
load_achievements();
if (!directory_exists(savePath)) directory_create(savePath);
if (!directory_exists(statsPath)) directory_create(statsPath);
readdata();
readpreffs();
sound_global_hrtf=hrtf;
apply_pitch_pool_settings();
p.max_distance = 0;
p.pan_step = 2.5;
p.volume_step = 2.5;
bosspool.max_distance = 0;
bosspool.pan_step = 2.5;
bosspool.volume_step = 2.5;
bulletpool.max_distance = 0;
bulletpool.pan_step = 2.5;
bulletpool.volume_step = 2.5;
doorpool.max_distance = 0;
doorpool.pan_step = 2.5;
doorpool.volume_step = 2.5;
carpool.max_distance = 0;
carpool.pan_step = 2.5;
carpool.volume_step = 2.5;
gardpool.max_distance = 0;
gardpool.pan_step = 2.5;
gardpool.volume_step = 2.5;
healpool.max_distance = 0;
healpool.pan_step = 2.5;
healpool.volume_step = 2.5;
keypool.max_distance = 0;
keypool.pan_step = 2.5;
keypool.volume_step = 2.5;
objpool.max_distance = 0;
objpool.pan_step = 2.5;
objpool.volume_step = 2.5;
toypool.max_distance = 0;
toypool.pan_step = 2.5;
toypool.volume_step = 2.5;
if (@timeelapsed.handle == null)
{
    timeelapsed.set_timer(gametimer);
}
getver();
show_window("ToyMania, version "+version);
if(gamstence.is_already_running)
{
alert("error", "You can only have one instence of this game running!");
exit();
}
else
{
    if (auto_check_updates)
    {
        check_for_updates(version, "ToyMania");
    }
    mainmenu();
}
}
void getver()
{
dockver.open("docks/version.txt","rb");
version=dockver.read();
dockver.close();
}
void pause_game()
{
boss_timer.pause();
gametimer.pause();
paused=true;
pause_pools();
}
void resume_game()
{
boss_timer.resume();
gametimer.resume();
paused=false;
resume_pools();
}
void resetgame()
{
    last_played_date = get_date(true, false);
    last_played_time = get_time(true, false);
level=1;
money=0;
collected_keys=0;
collected_toys=0;
destroyed_cars=0;
killed_gards=0;
moved_steps=0;
session_playtime=0;
total_collected_toys=0;
total_collected_keys=0;
total_killed_gards=0;
total_destroyed_cars=0;
total_moved_steps=0;
total_playtime=0;
    for (uint i = 0; i < achievements.length(); i++)
    {
        if (achievements[i].isSessionBased or !achievements[i].isSessionBased)
        {
            achievements[i].currentTier = 0;
        }
}
}
void resetpreffs()
{
soundcard="Default";
sound_output_device=1;
menumusvolume=0;
master_volume = 0;
bitplays=0;
crashplays=0;
stoneplays=0;
swordplays=0;
alarmvolume=0;
heartvolume=0;
toyambvolume=0;
toymusvolume=0;
auto_check_updates = true;
autorun=true;
menuwrap=true;
showset_desc=true;
behind_pitch=true;
hrtf=true;
play_ach_scores=true;
speak_ach_scores=true;
speak_dlg_enter=true;
speak_menu_loading=true;
gamcopy=true;
statscopy=true;
loop_previews=true;
variant_descriptions=true;
copexpsounds=true;
quit_menu=true;
playcounts=true;
playlevels=true;
completesound=true;
togglesound=true;
use_sr = true;
tts.set_voice(0);
tts.set_rate(0);
tts.set_volume(100);
}
