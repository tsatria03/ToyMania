#include"includes/includes.nvgt"
bool behind_pitch=true;
bool hrtf=true;
bool y_is_elevation=true;
bool bossdefeated = false;
bool bossespawn=false, carspawn=false, coinsfx=true, gardspawn=false, keydest=false, keyspawn=false, toydest=false, toyspawn=false;
double toyambvolume=-10, toyambpitch=100, toymusvolume=-10, toymuspitch=100;
double ammo=100, collected_keys=0, collected_toys=0, destroyed_cars=0, health=1000, killed_gards=0, level=1, taken_steps=0, total_collected_toys=0, total_collected_keys=0, total_killed_gards=0, total_destroyed_cars=0, total_taken_steps=0;
double maxx=50, maxy=50;
int painslot, toyambslot, toytrackslot, weaponslot;
int bossnum=1, carnum=5, gardnum=10, keynum=15, toynum=20;
int weprange=5, weprange2=10, wepdamage=20;
int gametime, movetime;
int firetime=50, firetime2=100;
int runtime=100;
int walktime=200;
int bossespawntime=5000, carspawntime=1000, gardspawntime=500, keyspawntime=250, toyspawntime=125;
int64 session_playtime = 0;
int64 total_playtime = 0;
string weapontype="bat";
string version="1.3";
timer bossespawntimer, carspawntimer, firetimer, firetimer2, gametimer, gardspawntimer, keyspawntimer, movetimer, runtimer, toyspawntimer, walktimer;
sound dummy;
menu m;
savedata sd("data/saves/game.tmg", "PYtaj2OBK9oT0MVpgeyo32zlfd3MuggW4g7Ago5t0PHI3pafU6QbwYo5wy3G1KWYWGiS8A9dNpI8M85j1D95Gjo4By96owIC3SfJMa5xCtl0yrrlDCWQjlZJgYnLWFGWRFeFzvHMZZL9exA7DBUPrdtF72wyZGQWNele7UOTCXeTtfsciim2bw3F31VsOhF3tCTp5Tt3hE5SpQmMTSmh8tOWZ7zDVXRIWAqjxnOBtD5qKI1l5b80ZxlcUL8aITZuz0YTcmWGrP5IItxzJj2YX3M9Y4v34Sx1C9PaBcmgdpn6ts56mbRjc69gmdry56hlaKrPKmnp2U");
savedata st("data/saves/settings.tmg", "JPl3mWxEI9k3USkJ9FOcAyX3rM2bC7TEMal2yhACrMXiymP9blH8RUhAnXJgY9s8wN18ZQDYnMAyqespGd7oqHOYEuhY10Py2KWa0GU7PmLuQTs86u9GSrNALSI2cQr91Nx7JdchD0YR3VT9Wt8HOeh7iEZmHKnAspZSZStdGL8WJdxuZSetCSEsSdyvpKtYa2kC4dE7PKM9YsdgQrOSxAOmnRtitYRdXr3NHdUhf8qefxjMMsELF3lzVycamyLAbTxpM1Kkj4h5YnELQxNf81ULUGyKVA2j3gx2wlJvbABIufN52A08Ia8ufou63Z4ZvUuzhj81jvzwS4D8XJ7e4k3hgdjI9oChGt991DqWjc2i3O7DQGgPQDSsrkXXKxz79ZlLyjF9nqlj0RuTIV0qNxZLgPEMqIKeGhxphLsJP3scIvtSzkKELNMvbwrDDFeT8pXVP");
AchievementTracker[] achievements;
sound_pool temp, p, pool, bosspool, carpool, doorpool, gardpool, keypool, toypool;
time_elapsed timeelapsed;
vector me;
void main()
{
set_sound_storage("data/saves/assets.tmg");
set_sound_decryption_key("LGY24P2p56riZXtvhxtONfyBQgVZZS8wJnVSJEZ0zOOeQr3THFTtlyIXYI04Dgbk2SD1DoCMFk8QuRPv7DhlAXJDb3XzEt8vd9RcU8LW0LzcXkHvJUmkWbAtJ8ITyuCF0CkpPcW6eiPsjGDU9rlVufn8GSO2vy4KAjcLe",true);
dummy.load("dummy");
achievements.insert_last(AchievementTracker("Toys", "Toy Collector", generate_achievement_thresholds(5, 20, 2)));
achievements.insert_last(AchievementTracker("Keys", "Key Hunter", generate_achievement_thresholds(10, 20, 2)));
achievements.insert_last(AchievementTracker("Guards", "Guard Slayer", generate_achievement_thresholds(20, 20, 2)));
achievements.insert_last(AchievementTracker("Cars", "Car Crusher", generate_achievement_thresholds(40, 20, 2)));
achievements.insert_last(AchievementTracker("Steps", "Pacer", generate_achievement_thresholds(80, 20, 2)));
achievements.insert_last(AchievementTracker("Playtime", "Time Traveler", generate_achievement_thresholds(2, 20, 2)));
readdata();
readpreffs();
sound_global_hrtf=hrtf;
if(behind_pitch==true) p.behind_pitch_decrease=5;
p.max_distance = 0;
p.pan_step = 2.5;
p.volume_step = 2.5;
if(behind_pitch==true) bosspool.behind_pitch_decrease=5;
bosspool.max_distance = 0;
bosspool.pan_step = 2.5;
bosspool.volume_step = 2.5;
if(behind_pitch==true) doorpool.behind_pitch_decrease=5;
doorpool.max_distance = 0;
doorpool.pan_step = 2.5;
doorpool.volume_step = 2.5;
if(behind_pitch==true) carpool.behind_pitch_decrease=5;
carpool.max_distance = 0;
carpool.pan_step = 2.5;
carpool.volume_step = 2.5;
if(behind_pitch==true) gardpool.behind_pitch_decrease=5;
gardpool.max_distance = 0;
gardpool.pan_step = 2.5;
gardpool.volume_step = 2.5;
if(behind_pitch==true) keypool.behind_pitch_decrease=5;
keypool.max_distance = 0;
keypool.pan_step = 2.5;
keypool.volume_step = 2.5;
if(behind_pitch==true) toypool.behind_pitch_decrease=5;
toypool.max_distance = 0;
toypool.pan_step = 2.5;
toypool.volume_step = 2.5;
if (@timeelapsed.handle == null)
{
    timeelapsed.set_timer(gametimer);
}
show_game_window("ToyMania, version "+version);
mainmenu();
}
void toy_game_input()
{
if(key_pressed(KEY_ESCAPE) and doormove==false)
{
fade_multi_pool();
level=1;
collected_toys = 0;
collected_keys = 0;
killed_gards = 0;
destroyed_cars = 0;
taken_steps = 0;
bossespawn=false;
carspawn=false;
gardspawn=false;
keyspawn=false;
toyspawn=false;
destroy_all_bosses();
destroy_all_cars();
destroy_all_gards();
destroy_all_doors();
destroy_all_keys();
destroy_all_toys();
mainmenu();
}
if(key_pressed(KEY_1) and doormove==false)
{
weapontype="bat";
wepdamage=3;
weprange=1;
weprange2=2;
speak(weapontype+" equipped");
p.destroy_sound(weaponslot);
weaponslot=p.play_stationary(weapontype+"draw.ogg", false);
}
if(key_pressed(KEY_2) and doormove==false)
{
weapontype="boot";
wepdamage=6;
weprange=2;
weprange2=3;
speak(weapontype+" equipped");
p.destroy_sound(weaponslot);
weaponslot=p.play_stationary(weapontype+"draw.ogg", false);
}
if(key_pressed(KEY_3) and doormove==false)
{
weapontype="club";
wepdamage=9;
weprange=3;
weprange2=4;
speak(weapontype+" equipped");
p.destroy_sound(weaponslot);
weaponslot=p.play_stationary(weapontype+"draw.ogg", false);
}
if(key_pressed(KEY_4) and doormove==false)
{
weapontype="feat";
wepdamage=12;
weprange=4;
weprange2=5;
speak(weapontype+" equipped");
weaponslot=p.play_stationary(weapontype+"draw.ogg", false);
}
if(key_pressed(KEY_5) and doormove==false)
{
weapontype="fist";
wepdamage=15;
weprange=5;
weprange2=6;
speak(weapontype+" equipped");
p.destroy_sound(weaponslot);
weaponslot=p.play_stationary(weapontype+"draw.ogg", false);
}
if(key_pressed(KEY_6) and doormove==false)
{
weapontype="hammer";
wepdamage=18;
weprange=6;
weprange2=7;
speak(weapontype+" equipped");
weaponslot=p.play_stationary(weapontype+"draw.ogg", false);
}
if(key_pressed(KEY_7) and doormove==false)
{
weapontype="knife";
wepdamage=21;
weprange=7;
weprange2=8;
speak(weapontype+" equipped");
p.destroy_sound(weaponslot);
weaponslot=p.play_stationary(weapontype+"draw.ogg", false);
}
if(key_pressed(KEY_8) and doormove==false)
{
weapontype="laser";
wepdamage=24;
weprange=8;
weprange2=9;
speak(weapontype+" equipped");
p.destroy_sound(weaponslot);
weaponslot=p.play_stationary(weapontype+"draw.ogg", false);
}
if(key_pressed(KEY_9) and doormove==false)
{
ammo=100;
weapontype="machinegun";
wepdamage=27;
weprange=9;
weprange2=10;
speak(weapontype+" equipped");
p.destroy_sound(weaponslot);
weaponslot=p.play_stationary(weapontype+"draw.ogg", false);
}
if(key_pressed(KEY_Z) and doormove==false)
{
if(weapontype=="machinegun") speak("You have "+ammo+"rounds of ammo available in this weapon.");
if(weapontype!="machinegun") speak("This weapon does not take any ammo.");
}
if(key_pressed(KEY_R) and doormove==false)
{
if(weapontype!="machinegun")
{
speak("This weapon does not take any ammo.");
}
else
{
if(weapontype=="machinegun" and ammo>=1)
{
speak("This weapon is already loaded with ammo.");
}
else if(weapontype=="machinegun" and ammo<=0)
{
ammo=100;
if(weapontype=="machinegun") weaponslot=p.play_stationary(weapontype+"reload.ogg",false);
}
}
}
if(key_pressed(KEY_L) and doormove==false)
{
speak("You're currently on level "+level);
}
if(key_pressed(KEY_C) and doormove==false)
{
speak("current location, "+me.x+", "+me.y);
}
if(key_pressed(KEY_T) and doormove==false)
{
speak("You have collected "+collected_toys+" toys.");
}
if(key_pressed(KEY_O) and doormove==false)
{
speak("There are "+toys.length()+" collectible toys on the field.");
}
if(key_pressed(KEY_I) and doormove==false)
{
speak("You have collected "+collected_keys+" keys.");
}
if(key_pressed(KEY_U) and doormove==false)
{
speak("There are "+keys.length()+" collectible keys on the field.");
}
if(key_pressed(KEY_F) and doormove==false)
{
speak("You have destroyed "+destroyed_cars+" cars.");
}
if(key_pressed(KEY_J) and doormove==false)
{
speak("There are "+cars.length()+" destroyable cars on the field.");
}
if(key_pressed(KEY_Y) and doormove==false)
{
speak("You've been playing for a total of;"+timeelapsed.m()+"minutes,"+timeelapsed.s()+"seconds");
}
if(key_pressed(KEY_H) and doormove==false)
{
speak("You have"+health+" hp remaining.");
}
if(key_pressed(KEY_Q) and doormove==false)
{
speak("You have killed"+killed_gards+" gards.");
}
if(key_pressed(KEY_E) and doormove==false)
{
speak("There are "+gards.length()+" killible gards on the field.");
}
if(alt_is_down() or control_is_down())
{
movetime=runtime;
}
else
{
movetime=walktime;
}
if (key_down(KEY_LEFT) and movetimer.elapsed>=movetime and me.x!=0 and doormove==false)
{
me.x-=1;
taken_steps+=1;
total_taken_steps+=1;
update_achievements();
writedata();
p.play_stationary("playerstep"+random(1,5)+".ogg", false);
movetimer.restart();
}
if (key_down(KEY_RIGHT) and movetimer.elapsed>=movetime and me.x!=maxx and doormove==false)
{
me.x+=1;
taken_steps+=1;
total_taken_steps+=1;
update_achievements();
writedata();
p.play_stationary("playerstep"+random(1,5)+".ogg", false);
movetimer.restart();
}
if (key_down(KEY_DOWN) and movetimer.elapsed>=movetime and me.y!=0 and doormove==false)
{
me.y-=1;
taken_steps+=1;
total_taken_steps+=1;
update_achievements();
writedata();
p.play_stationary("playerstep"+random(1,5)+".ogg", false);
movetimer.restart();
}
if (key_down(KEY_UP) and movetimer.elapsed>=movetime and me.y!=maxy and doormove==false)
{
me.y+=1;
taken_steps+=1;
total_taken_steps+=1;
update_achievements();
writedata();
p.play_stationary("playerstep"+random(1,5)+".ogg", false);
movetimer.restart();
}
if(key_down(KEY_SPACE) and firetimer2.elapsed>=firetime2 and weapontype=="machinegun" and doormove==false)
{
ammo-=1;
if(ammo<=0 and weapontype=="machinegun") weaponslot=p.play_stationary(weapontype+"empty.ogg", false);
if(ammo>=1 and weapontype=="machinegun") weaponslot=p.play_stationary(weapontype+"fire.ogg", false);
firetimer2.restart();
for(uint i = 0; i < bosses.length(); i++)
{
if(absolute(bosses[i].bossx - me.x) <= weprange and absolute(bosses[i].bossy - me.y) <= weprange2)
{
if(weapontype=="machinegun" and ammo>=1)
{
if(ammo>=1 and weapontype=="machinegun") wepdamage=random(27,30);
if(ammo>=1 and weapontype=="machinegun") weaponslot=p.play_2d(weapontype+"hit.ogg",me.x,me.y,bosses[i].bossx,bosses[i].bossy, false);
if(ammo>=1 and weapontype=="machinegun") weaponslot=p.play_2d(weapontype+"shell"+random(1,4)+".ogg",me.x,me.y,bosses[i].bossx,bosses[i].bossy, false);
}
if(ammo>=1 and weapontype=="machinegun") bosses[i].hurtsound=bosspool.play_2d(bosses[i].bosstype+"pain.ogg",me.x,me.y,bosses[i].bossx,bosses[i].bossy,false);
if(ammo>=1 and weapontype=="machinegun") bosses[i].bosshealth-=wepdamage;
}
}
for(uint i = 0; i < cars.length(); i++)
{
if(absolute(cars[i].carx - me.x) <= weprange and absolute(cars[i].cary - me.y) <= weprange2)
{
if(weapontype=="machinegun" and ammo>=1)
{
if(ammo>=1 and weapontype=="machinegun") wepdamage=random(27,30);
if(ammo>=1 and weapontype=="machinegun") weaponslot=p.play_2d(weapontype+"hit.ogg",me.x,me.y,cars[i].carx,cars[i].cary, false);
if(ammo>=1 and weapontype=="machinegun") weaponslot=p.play_2d(weapontype+"shell"+random(1,4)+".ogg",me.x,me.y,cars[i].carx,cars[i].cary, false);
}
if(ammo>=1 and weapontype=="machinegun") cars[i].hurtsound=carpool.play_2d(cars[i].cartype+"pain.ogg",me.x,me.y,cars[i].carx,cars[i].cary,false);
if(ammo>=1 and weapontype=="machinegun") cars[i].carhealth-=wepdamage;
}
}
for(uint i = 0; i < gards.length(); i++)
{
if(absolute(gards[i].gardx - me.x) <= weprange and absolute(gards[i].gardy - me.y) <= weprange2)
{
if(weapontype=="machinegun" and ammo>=1)
{
if(ammo>=1 and weapontype=="machinegun") wepdamage=random(27,30);
if(ammo>=1 and weapontype=="machinegun") weaponslot=p.play_2d(weapontype+"hit.ogg",me.x,me.y,gards[i].gardx,gards[i].gardy, false);
if(ammo>=1 and weapontype=="machinegun") weaponslot=p.play_2d(weapontype+"shell"+random(1,4)+".ogg",me.x,me.y,gards[i].gardx,gards[i].gardy, false);
}
if(ammo>=1 and weapontype=="machinegun" and gards[i].gardtype=="gard1") gards[i].hurtsound=gardpool.play_2d(gards[i].gardtype+"pain"+random(1,5)+".ogg", me.x, me.y, gards[i].gardx, gards[i].gardy, false);
if(ammo>=1 and weapontype=="machinegun" and gards[i].gardtype=="gard2") gards[i].hurtsound=gardpool.play_2d(gards[i].gardtype+"pain.ogg", me.x, me.y, gards[i].gardx, gards[i].gardy, false);
if(ammo>=1 and weapontype=="machinegun") gards[i].gardhealth-=wepdamage;
}
}
}
if(key_pressed(KEY_SPACE) and firetimer.elapsed>=firetime and weapontype!="machinegun" and doormove==false)
{
if(weapontype=="bat") weaponslot=p.play_stationary(weapontype+"fire"+random(1,3)+".ogg", false);
if(weapontype=="boot") weaponslot=p.play_stationary(weapontype+"fire"+random(1,3)+".ogg", false);
if(weapontype=="club") weaponslot=p.play_stationary(weapontype+"fire"+random(1,3)+".ogg", false);
if(weapontype=="feat") weaponslot=p.play_stationary(weapontype+"fire"+random(1,3)+".ogg", false);
if(weapontype=="fist") weaponslot=p.play_stationary(weapontype+"fire"+random(1,2)+".ogg", false);
if(weapontype=="hammer") weaponslot=p.play_stationary(weapontype+"fire"+random(1,3)+".ogg", false);
if(weapontype=="knife") weaponslot=p.play_stationary(weapontype+"fire"+random(1,3)+".ogg", false);
if(weapontype=="laser") weaponslot=p.play_stationary(weapontype+"fire.ogg", false);
firetimer.restart();
for(uint i = 0; i < bosses.length(); i++)
{
if(absolute(bosses[i].bossx - me.x) <= weprange and absolute(bosses[i].bossy - me.y) <= weprange2)
{
if(weapontype=="bat")
{
wepdamage=random(3,6);
weaponslot=p.play_2d(weapontype+"hit"+random(1,3)+".ogg",me.x,me.y,bosses[i].bossx,bosses[i].bossy, false);
}
if(weapontype=="boot")
{
wepdamage=random(6,9);
weaponslot=p.play_2d(weapontype+"hit"+random(1,3)+".ogg",me.x,me.y,bosses[i].bossx,bosses[i].bossy, false);
}
if(weapontype=="club")
{
wepdamage=random(9,12);
weaponslot=p.play_2d(weapontype+"hit"+random(1,3)+".ogg",me.x,me.y,bosses[i].bossx,bosses[i].bossy, false);
}
if(weapontype=="feat")
{
wepdamage=random(12,15);
weaponslot=p.play_2d(weapontype+"hit"+random(1,3)+".ogg",me.x,me.y,bosses[i].bossx,bosses[i].bossy, false);
}
if(weapontype=="fist")
{
wepdamage=random(15,18);
weaponslot=p.play_2d(weapontype+"hit"+random(1,2)+".ogg",me.x,me.y,bosses[i].bossx,bosses[i].bossy, false);
}
if(weapontype=="hammer")
{
wepdamage=random(18,21);
weaponslot=p.play_2d(weapontype+"hit"+random(1,3)+".ogg",me.x,me.y,bosses[i].bossx,bosses[i].bossy, false);
}
if(weapontype=="knife")
{
wepdamage=random(21,24);
weaponslot=p.play_2d(weapontype+"hit"+random(1,3)+".ogg",me.x,me.y,bosses[i].bossx,bosses[i].bossy, false);
}
if(weapontype=="laser")
{
wepdamage=random(24,27);
weaponslot=p.play_2d(weapontype+"hit.ogg",me.x,me.y,bosses[i].bossx,bosses[i].bossy, false);
}
bosses[i].hurtsound=bosspool.play_2d(bosses[i].bosstype+"pain.ogg",me.x,me.y,bosses[i].bossx,bosses[i].bossy,false);
bosses[i].bosshealth-=wepdamage;
}
}
for(uint i = 0; i < cars.length(); i++)
{
if(absolute(cars[i].carx - me.x) <= weprange and absolute(cars[i].cary - me.y) <= weprange2)
{
if(weapontype=="bat")
{
wepdamage=random(3,6);
weaponslot=p.play_2d(weapontype+"hit"+random(1,3)+".ogg",me.x,me.y,cars[i].carx,cars[i].cary, false);
}
if(weapontype=="boot")
{
wepdamage=random(6,9);
weaponslot=p.play_2d(weapontype+"hit"+random(1,3)+".ogg",me.x,me.y,cars[i].carx,cars[i].cary, false);
}
if(weapontype=="club")
{
wepdamage=random(9,12);
weaponslot=p.play_2d(weapontype+"hit"+random(1,3)+".ogg",me.x,me.y,cars[i].carx,cars[i].cary, false);
}
if(weapontype=="feat")
{
wepdamage=random(12,15);
weaponslot=p.play_2d(weapontype+"hit"+random(1,3)+".ogg",me.x,me.y,cars[i].carx,cars[i].cary, false);
}
if(weapontype=="fist")
{
wepdamage=random(15,18);
weaponslot=p.play_2d(weapontype+"hit"+random(1,2)+".ogg",me.x,me.y,cars[i].carx,cars[i].cary, false);
}
if(weapontype=="hammer")
{
wepdamage=random(18,21);
weaponslot=p.play_2d(weapontype+"hit"+random(1,3)+".ogg",me.x,me.y,cars[i].carx,cars[i].cary, false);
}
if(weapontype=="knife")
{
wepdamage=random(21,24);
weaponslot=p.play_2d(weapontype+"hit"+random(1,3)+".ogg",me.x,me.y,cars[i].carx,cars[i].cary, false);
}
if(weapontype=="laser")
{
wepdamage=random(24,27);
weaponslot=p.play_2d(weapontype+"hit.ogg",me.x,me.y,cars[i].carx,cars[i].cary, false);
}
cars[i].hurtsound=carpool.play_2d(cars[i].cartype+"pain.ogg",me.x,me.y,cars[i].carx,cars[i].cary,false);
cars[i].carhealth-=wepdamage;
}
}
for(uint i = 0; i < gards.length(); i++)
{
if(absolute(gards[i].gardx - me.x) <= weprange and absolute(gards[i].gardy - me.y) <= weprange2)
{
if(weapontype=="bat")
{
wepdamage=random(3,6);
weaponslot=p.play_2d(weapontype+"hit"+random(1,3)+".ogg",me.x,me.y,gards[i].gardx,gards[i].gardy, false);
}
if(weapontype=="boot")
{
wepdamage=random(6,9);
weaponslot=p.play_2d(weapontype+"hit"+random(1,3)+".ogg",me.x,me.y,gards[i].gardx,gards[i].gardy, false);
}
if(weapontype=="club")
{
wepdamage=random(9,12);
weaponslot=p.play_2d(weapontype+"hit"+random(1,3)+".ogg",me.x,me.y,gards[i].gardx,gards[i].gardy, false);
}
if(weapontype=="feat")
{
wepdamage=random(12,15);
weaponslot=p.play_2d(weapontype+"hit"+random(1,3)+".ogg",me.x,me.y,gards[i].gardx,gards[i].gardy, false);
}
if(weapontype=="fist")
{
wepdamage=random(15,18);
weaponslot=p.play_2d(weapontype+"hit"+random(1,2)+".ogg",me.x,me.y,gards[i].gardx,gards[i].gardy, false);
}
if(weapontype=="hammer")
{
wepdamage=random(18,21);
weaponslot=p.play_2d(weapontype+"hit"+random(1,3)+".ogg",me.x,me.y,gards[i].gardx,gards[i].gardy, false);
}
if(weapontype=="knife")
{
wepdamage=random(21,24);
weaponslot=p.play_2d(weapontype+"hit"+random(1,3)+".ogg",me.x,me.y,gards[i].gardx,gards[i].gardy, false);
}
if(weapontype=="laser")
{
wepdamage=random(24,27);
weaponslot=p.play_2d(weapontype+"hit.ogg",me.x,me.y,gards[i].gardx,gards[i].gardy, false);
}
if(gards[i].gardtype=="gard1") gards[i].hurtsound=gardpool.play_2d(gards[i].gardtype+"pain"+random(1,5)+".ogg", me.x, me.y, gards[i].gardx, gards[i].gardy, false);
if(gards[i].gardtype=="gard2") gards[i].hurtsound=gardpool.play_2d(gards[i].gardtype+"pain.ogg", me.x, me.y, gards[i].gardx, gards[i].gardy, false);
gards[i].gardhealth-=wepdamage;
}
}
}
}

void toygame()
{
weapontype="bat";
wepdamage=3;
weprange=1;
weprange2=2;
speak(weapontype+" equipped");
weaponslot=p.play_stationary(weapontype+"draw.ogg", false);
p.play_stationary("playerland.ogg", false);
toyambslot=pool.play_stationary_extended("toyamb.ogg",true,0,0,toyambvolume,toyambpitch,false);
toytrackslot=pool.play_stationary_extended("toymus.ogg",true,0,0,toymusvolume,toymuspitch,false);
while(true)
{
wait(5);
bfloop();
bossloop();
carloop();
doorcheck();
doorloop();
gardloop();
keyloop();
toyloop();
toy_game_input();
p.update_listener_2d(me.x,me.y);
bosspool.update_listener_2d(me.x,me.y);
carpool.update_listener_2d(me.x,me.y);
doorpool.update_listener_2d(me.x,me.y);
gardpool.update_listener_2d(me.x,me.y);
keypool.update_listener_2d(me.x,me.y);
toypool.update_listener_2d(me.x,me.y);
if(bossespawntimer.elapsed>=bossespawntime and bosses.length()<bossnum and bossespawn==true and !bossdefeated)
{
dlgplay("alert.ogg");
destroy_all_cars();
destroy_all_doors();
destroy_all_gards();
destroy_all_toys();
spawn_boss(random(0,maxx), random(0,maxy), random(200,400), random(40,80), random(100,500), random(5000,10000), random(100,500), random(5000,10000), random(10000,20000), "boss");
spawn_door(random(25,50), random(25,50), 0, 0, random(100,200), false);
bossespawntimer.restart();
}
if(carspawntimer.elapsed>=carspawntime and cars.length()<carnum and carspawn==true)
{
int carchoice;
if(carchoice==1) spawn_car(random(0,maxx), random(0,maxy), random(0,1), random(0,1), random(5,10), random(100,1000), "car1");
if(carchoice==2) spawn_car(random(0,maxx), random(0,maxy), random(0,1), random(0,1), random(10,20), random(75,750), "car2");
if(carchoice==3) spawn_car(random(0,maxx), random(0,maxy), random(0,1), random(0,1), random(20,40), random(50,500), "car3");
carchoice=random(1,3);
carspawntimer.restart();
}
if(gardspawntimer.elapsed>=gardspawntime and gards.length()<gardnum and gardspawn==true)
{
destroy_all_cars();
int gardchoice;
if(gardchoice==1) spawn_gard(random(0,maxx), random(0,maxy), random(20,40), random(20,40), random(100,1000), random(100,1000), "gard1");
if(gardchoice==2) spawn_gard(random(0,maxx), random(0,maxy), random(30,60), random(30,60), random(75,750), random(75,750), "gard2");
gardchoice=random(1,2);
gardspawntimer.restart();
}
if(keyspawntimer.elapsed>=keyspawntime and keys.length()<keynum and keyspawn==true)
{
spawn_key(random(0,maxx), random(0,maxy), random(2500,5000), keydest);
keyspawntimer.restart();
}
if(toyspawntimer.elapsed>=toyspawntime and toys.length()<toynum and toyspawn==true)
{
spawn_toy(random(0,maxx), random(0,maxy), random(5000,10000), toydest);
toyspawntimer.restart();
}
if(gametimer.elapsed>=1000*60)
{
level=2;
carspawn=true;
toynum=25;
}
if(gametimer.elapsed>=1000*120)
{
level=3;
carnum=10;
toydest=true;
toynum=30;
}
if(gametimer.elapsed>=1000*180)
{
level=4;
carspawn=false;
gardspawn=true;
toynum=35;
}
if(gametimer.elapsed>=1000*240)
{
level=5;
gardnum=20;
toynum=50;
}
if(gametimer.elapsed>=1000*300)
{
level=6;
carspawn=false;
gardspawn=false;
toyspawn=false;
bossespawn=true;
keydest=true;
keyspawn=true;
}
if(ammo<=0)
{
ammo=0;
}
if(health<=0)
{
level=1;
bossdefeated = false;
bossespawn=false;
carspawn=false;
gardspawn=false;
keyspawn=false;
toyspawn=false;
destroy_all_bosses();
destroy_all_cars();
destroy_all_doors();
destroy_all_gards();
destroy_all_keys();
destroy_all_toys();
p.destroy_sound(painslot);
pool.destroy_sound(toyambslot);
pool.destroy_sound(toytrackslot);
dlgplay("playerdeath.ogg");
dlgplay("playerfall.ogg");
dlgmessage("You died on level "+level+"! Here's how you did:"+ "--Keys collected: " + collected_keys +"--Toys collected: " + collected_toys +"--Cars destroyed: " + destroyed_cars +"--Guards defeated: " + killed_gards +"--Steps taken: " + taken_steps +"--Time survived: " + timeelapsed.m() + " minutes, " + timeelapsed.s() + " seconds" +"--Better luck next time!");
session_playtime += timeelapsed.ms();
total_playtime += timeelapsed.ms();
writedata();
mainmenu();
}
}
}
